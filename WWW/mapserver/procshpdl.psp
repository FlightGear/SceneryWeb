<%
#
# called by 'shpdl.psp'
# calls 'procshpdl.sh'
#
# Verify input from the web form and store the necessary details in the
# 'download' database table. Fire 'procshpdl.sh' with a reference to the UUID
# of the respective database entry.
#
import os
import psycopg2
import uuid
import time

# Define DB connection for verification of layers to download
#
db_params = { 'host':'geoscope.optiputer.net', 'database':'landcover', 'user':'webuser' }
try:
    db_conn = psycopg2.connect(**db_params)
except:
    print "Cannot connect to database."
db_cur = db_conn.cursor()

validlayers = ['cs', 'v0', 'clc00', 'clc06', 'osm', 'apt', 'tgr']

url_params = {}
url_params['mylayer'] = ("%(layer)s" % form)

if url_params['mylayer'] not in validlayers:
    exit(1)

# Check if the defined layer to download is a valid one
#
testlayercmd = ( "SELECT COUNT(*) from conf_layer \
    WHERE maplayer = '%(mylayer)s' \
    OR (pgislayer = '%(mylayer)s' AND maplayer IS NULL);" % url_params )

xmin = float("%(xmin)s" % form)
xmax = float("%(xmax)s" % form)
ymin = float("%(ymin)s" % form)
ymax = float("%(ymax)s" % form)
dlarea = ((xmax - xmin) * (ymax - ymin))

# West/East swapped
#
if xmin > xmax:
    print "Please use reasonable coordinates!"
    exit(1)

# Nort/South swapped
#
if ymin > ymax:
    print "Please use reasonable coordinates!"
    exit(1)

# Area too large
#
if dlarea > 144:
    print "Please don't exceed maximum area!"
    exit(1)

# Now, everything is ok
#
url_params['myuuid'] = uuid.uuid4()
url_params['ll_geometry'] = ("%(xmin)s %(ymin)s" % form)
url_params['ur_geometry'] = ("%(xmax)s %(ymax)s" % form)
url_params['mydate'] = time.strftime("%Y-%m-%d %H:%M")

# After everything's verified, store an entry in the 'download' table for
# retrieval and execution via the 'procshpdl.sh' script.
#
sql = ("INSERT INTO download (uuid, ll_geometry, " + \
       "ur_geometry, pgislayer, requestdate) VALUES \
    ('%(myuuid)s', \
    ST_GeomFromEWKT('SRID=4326;POINT(%(ll_geometry)s)'), \
    ST_GeomFromEWKT('SRID=4326;POINT(%(ur_geometry)s)'), \
    '%(mylayer)s', \
    '%(mydate)s' \
);" % url_params)

try:
    db_cur.execute(sql)
except:
    print "Cannot execute SQL statement."

# Cleanup
#
db_cur.close()
db_conn.commit()
db_conn.close()

# Finally call 'procshpdl.sh' with the given UUID identifier as stored in the
# 'download' table and redirect to the downloadable file.
#
dumpcmd = ("/home/fgscenery/WWW/mapserver/procshpdl.sh %(myuuid)s > /tmp/procshpdl.log 2>&1" % url_params)
os.system(dumpcmd)
psp.redirect("/download/%(myuuid)s.zip" % url_params)
%>
